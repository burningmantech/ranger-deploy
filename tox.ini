[tox]

envlist =
    lint, mypy
    coverage-py{36,37,38,39,310,py3}
    coverage_report
    docs
    packaging

skip_missing_interpreters = {tty:True:False}


[default]

basepython = python3.8

deps =
    {test,coverage}: hypothesis==6.14.0
    coverage: coverage==5.1

setenv =
    PY_MODULE=deploy

    PYTHONPYCACHEPREFIX={envtmpdir}/pycache


##
# Default environment: unit tests
##

[testenv]

description = run tests

basepython =
    py:   python
    py36: python3.6
    py37: python3.7
    py38: python3.8
    py39: python3.9
    py310: python3.10
    pypy3: pypy3

deps = {[default]deps}

passenv =
    {test,coverage}: CI

setenv =
    {[default]setenv}

    coverage: COVERAGE_FILE={toxworkdir}/coverage.{envname}

commands =
    # Run trial without coverage
    test: trial --random=0 --logfile="{envlogdir}/trial.log" --temp-directory="{envlogdir}/trial.d" {posargs:{env:PY_MODULE}}

    # Run trial with coverage
    coverage: coverage run --source {env:PY_MODULE} "{envdir}/bin/trial" --random=0 --logfile="{envlogdir}/trial.log" --temp-directory="{envlogdir}/trial.d" {posargs:{env:PY_MODULE}}

    # Run coverage reports, ignore exit status
    coverage: - coverage report --skip-covered


##
# Lint
##

[testenv:lint]

description = run all linters

basepython = {[default]basepython}

skip_install = True

deps =
    pre-commit==2.13.0

commands =
    pre-commit run {posargs:--all-files}


##
# Mypy static type checking
##

[testenv:mypy]

description = run Mypy (static type checker)

basepython = {[default]basepython}

deps =
    # Note: mypy-zope pins the mypy version
    mypy==0.902  # rq.filter: ==0.812
    mypy-zope==0.3.1
    types-click==7.1.0

    {[default]deps}

commands =
    mypy                                       \
        --cache-dir="{toxworkdir}/mypy_cache"  \
        {tty:--pretty:}                        \
        {posargs:setup.py src}


##
# Coverage report
##

[testenv:coverage_report]

description = generate coverage report

depends = {test,coverage}-py{36,37,38,39,310,py3}

basepython = {[default]basepython}

skip_install = True

deps =
    coverage==5.0.4

setenv =
    {[default]setenv}

    COVERAGE_FILE={toxworkdir}/coverage

commands =
    coverage combine
    - coverage report
    - coverage html


##
# Documentation
##

[testenv:docs]

description = build documentation

basepython = {[default]basepython}

deps =
    Sphinx==2.3.1
    sphinx-rtd-theme==0.5.2

commands =
    sphinx-build                           \
        -b html -d "{envtmpdir}/doctrees"  \
        "{toxinidir}/docs"                 \
        "{toxinidir}/htmldocs"


[testenv:docs-auto]

description = build documentation and rebuild automatically

basepython = {[default]basepython}

deps =
    Sphinx==2.2.2
    sphinx-rtd-theme==0.4.3
    sphinx-autobuild==2021.3.14

commands =
    sphinx-autobuild                       \
        -b html -d "{envtmpdir}/doctrees"  \
        --host=localhost                   \
        "{toxinidir}/docs"                 \
        "{toxinidir}/htmldocs"


##
# Packaging
##

[testenv:packaging]

description = check for potential packaging problems

basepython = {[default]basepython}

skip_install = True

deps =
   check-manifest==0.46
   readme-renderer==29.0
   twine==3.4.1

commands =
   check-manifest
   pip wheel --wheel-dir "{envtmpdir}/dist" --no-deps {toxinidir}
   twine check "{envtmpdir}/dist/"*


##
# Print dependencies
##

[testenv:dependencies]

description = print dependencies

basepython = {[default]basepython}

recreate = true

deps =
    pipdeptree

commands =
    python -c 'print()'
    pip freeze --exclude="{env:PY_MODULE}" --exclude=pipdeptree

    python -c 'print()'
    pipdeptree
