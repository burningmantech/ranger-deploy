# Docs:
# https://help.github.com/en/actions/automating-your-workflow-with-github-actions



name: CI/CD

on: [push]


jobs:

  info:

    name: Workflow information
    runs-on: ubuntu-latest
    timeout-minutes: 1

    steps:

      - name: Print GitHub Context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "${GITHUB_CONTEXT}";

      - name: Print Job Context
        env:
          JOB_CONTEXT: ${{ toJson(job) }}
        run: echo "${JOB_CONTEXT}";

      - name: Print Steps Context
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: echo "${STEPS_CONTEXT}";

      - name: Print Runner Context
        env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}
        run: echo "${RUNNER_CONTEXT}";

      - name: Print Strategy Context
        env:
          STRATEGY_CONTEXT: ${{ toJson(strategy) }}
        run: echo "${STRATEGY_CONTEXT}";

      - name: Print Matrix Context
        env:
          MATRIX_CONTEXT: ${{ toJson(matrix) }}
        run: echo "${MATRIX_CONTEXT}";


  flake8:

    name: Flake8 (linter)

    runs-on: ubuntu-latest
    timeout-minutes: 1

    steps:

      - name: Checkout source code
        uses: actions/checkout@v1

      - name: Install Python
        uses: actions/setup-python@v1
        with:
          python-version: "3.8"

      - name: Install Tox
        run: pip install tox;

      - name: Run Flake8
        run: tox -e flake8;


  black:

    name: Black (linter)

    runs-on: ubuntu-latest
    timeout-minutes: 1

    steps:

      - name: Checkout source code
        uses: actions/checkout@v1

      - name: Install Python
        uses: actions/setup-python@v1
        with:
          python-version: "3.8"

      - name: Install Tox
        run: pip install tox;

      - name: Run Flake8
        run: tox -e black;


  mypy:
    name: Mypy (static type checker)

    runs-on: ubuntu-latest
    timeout-minutes: 1

    steps:

      - name: Checkout source code
        uses: actions/checkout@v1

      - name: Install Python
        uses: actions/setup-python@v1
        with:
          python-version: "3.8"

      - name: Install Tox
        run: pip install tox;

      - name: Run Mypy
        run: tox -e mypy;


  docs:

    name: Build documentation

    runs-on: ubuntu-latest
    timeout-minutes: 3

    steps:

      - name: Checkout source code
        uses: actions/checkout@v1

      - name: Install Python
        uses: actions/setup-python@v1
        with:
          python-version: "3.8"

      - name: Install Tox
        run: pip install tox;

      - name: Build documentation
        run: tox -e docs;


  packaging:
    name: Packaging

    runs-on: ubuntu-latest
    timeout-minutes: 1

    steps:

      - name: Checkout source code
        uses: actions/checkout@v1

      - name: Install Python
        uses: actions/setup-python@v1
        with:
          python-version: "3.8"

      - name: Install Tox
        run: pip install tox;

      - name: Check packaging
        run: tox -e packaging;


  unit:
    name: Unit Tests using Python ${{ matrix.python }} on Ubuntu

    needs: [flake8, black, mypy, docs, packaging]

    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      matrix:
        python: ["3.6", "3.7", "3.8"]

    steps:

      - name: Checkout source code
        uses: actions/checkout@v1

      - name: Install Python
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python }}

      - name: Install Tox
        run: pip install tox;

      - name: Run unit tests
        run: tox -e coverage-py,codecov;
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
          GITHUB_REF: ${{ github.ref }}
          GITHUB_COMMIT: ${{ github.sha }}
          GITHUB_USER: ${{ github.actor }}
          GITHUB_WORKFLOW: ${{ github.workflow }}

      - name: Upload Trial log artifact
        uses: actions/upload-artifact@v1
        with:
          name: trial
          path: .tox/coverage-py/log/trial.log
